name: Example CRI - Deploy to Dev

on:
  workflow_dispatch:
    inputs:
      gitRef:
        description: Input branch name or commit SHA
        required: true
        type: string
        default: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out repository code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Check out the repository at the specific branch, tag, or commit
          ref: ${{ inputs.gitRef }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: ${{ secrets.DEV_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1

      - name: Set GIT_REF_SHA
        # Set GIT_REF_SHA to the checked-out commit SHA
        run: echo "GIT_REF_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build, tag and push image to ECR
        working-directory: ./example-credential-issuer
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.DEV_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.GIT_REF_SHA }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@c71dd89d980e49367c70391e8ada4353f52f2800 # v2
        with:
          version: 1.131.0
          use-installer: true

      - name: Deploy SAM app
        working-directory: ./example-credential-issuer/deploy
        env:
          ARTIFACT_BUCKET_NAME: ${{ secrets.DEV_ARTIFACT_SOURCE_BUCKET_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.DEV_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.GIT_REF_SHA }}
        run: |
          echo "Running `SAM validate` and `SAM build`"
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          sam validate
          sam build
          mv .aws-sam/build/template.yaml cf-template.yaml
          echo "Replacing `CONTAINER-IMAGE-PLACEHOLDER` with new ECR image"
          sed -i "s|CONTAINER-IMAGE-PLACEHOLDER|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|" cf-template.yaml
          echo "Compressing SAM template"
          zip template.zip cf-template.yaml
          echo "Uploading the built SAM application artifacts to the deployment pipeline S3 bucket"
          aws s3 cp template.zip "s3://$ARTIFACT_BUCKET_NAME/template.zip" --metadata "repository=$GITHUB_REPOSITORY,commitsha=$IMAGE_TAG"
