name: Example CRI - Pull Request Checks

on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
    paths:
      - example-credential-issuer/**
      - .github/workflows/example-credential-issuer-pull-request-checks.yml

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check-conventional-commits:
    name: Check conventional commits
    runs-on: ubuntu-24.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          # Pick the PR HEAD instead of the merge commit
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Verify conventional commit standards
        uses: cocogitto/cocogitto-action@390bda87a19bf627e03ad075c67a11e9ddbb7547 # v4.0.0
        with:
          command: check
          args: --from-latest-tag

  run-test-harness:
    name: Run test harness
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./example-credential-issuer
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout test harness
        uses: actions/checkout@v4
        with:
          repository: govuk-one-login/mobile-wallet-cri-test-harness
          path: test-harness

      - name: Build example CRI Docker image
        run: docker build -t example-cri:pr-${{ github.run_id }} .

      - name: Create Docker network for communication
        run: docker network create example-cri-network || true

      - name: Run example CRI container
        run: |
          docker run -d --name example-cri \
          --network example-cri-network \
          -p 8080:8080 \
          -e AWS_ACCESS_KEY_ID=na \
          -e AWS_SECRET_ACCESS_KEY=na \
          -e AWS_DEFAULT_REGION=eu-west-2 \
          -e AWS_ENDPOINT_URL=http://localstack-credentialIssuer:4566 \
          example-cri:pr-${{ github.run_id }}

      - name: Run LocalStack container
        run: |
          docker compose -f docker-compose.yml up --build -d --wait     

      - name: Run test harness
        run: |
          sed -i 's/host.docker.internal/example-cri/g' ./test/helpers/api/api.ts
          sed -i 's/docker run/docker run --network example-cri-network/' test-jwt.sh
          ./test-jwt.sh "https://mobile.build.account.gov.uk/wallet-test/add?credential_offer=%7B%22grants%22%3A%7B%22urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Apre-authorized_code%22%3A%7B%22pre-authorized_code%22%3A%22eyJraWQiOiI1ZGNiZWU4NjNiNWQ3Y2MzMGM5YmExZjczOTNkYWNjNmMxNjYxMDc4MmU0YjZhMTkxZjk0YTdlOGIxZTE1MTBmIiwidHlwIjoiSldUIiwiYWxnIjoiRVMyNTYifQ.eyJhdWQiOiJodHRwczovL3N0dWItY3JlZGVudGlhbC1pc3N1ZXIubW9iaWxlLmJ1aWxkLmFjY291bnQuZ292LnVrIiwiY2xpZW50SWQiOiJURVNUX0NMSUVOVF9JRCIsImlzcyI6Imh0dHBzOi8vZXhhbXBsZS1jcmVkZW50aWFsLWlzc3Vlci5tb2JpbGUuYnVpbGQuYWNjb3VudC5nb3YudWsiLCJjcmVkZW50aWFsX2lkZW50aWZpZXJzIjpbIjExMjc1ZDM2LWFkMzUtNGI1Ny05YzdmLTZkMmM2ZWVlMjQyYSJdLCJleHAiOjE3NjE2NjIzODksImlhdCI6MTc2MTY2MjA4OX0.yoysrKk_UefYYwGovaY4mmlZY32-WR2a2BXxZ4wLZP_O0olbw_SogsnOcFYMCeG4pouFLPfKZ-euOB-x_ZOlTg%22%7D%7D%2C%22credential_issuer%22%3A%22http%3A%2F%2Flocalhost:8080%22%2C%22credential_configuration_ids%22%3A%5B%22org.iso.18013.5.1.mDL%22%5D%7D"
        working-directory: ./test-harness

      - name: Check Docker network
        run: |
          docker network inspect example-cri-network

      - name: Show logs
        run: |
          docker logs example-cri || echo "Container logs not available"

  run-code-analysis:
    name: Run code analysis
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./example-credential-issuer
    steps:
      - name: Check out repository code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Check out the repository with full Git history
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'corretto'
          cache: gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and unit test
        run: ./gradlew clean build

      - name: Perform static analysis
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

      - name: Check SonarQube Quality Gate status
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: sonarsource/sonarqube-quality-gate-action@cf038b0e0cdecfa9e56c198bbb7d21d751d62c3b # v1.2.0
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          scanMetadataReportFile: ${{ github.workspace }}/example-credential-issuer/build/sonar/report-task.txt
