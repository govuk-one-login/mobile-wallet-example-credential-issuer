---
name: "Verify & Publish to Dev"

on:
  workflow_dispatch:
    inputs:
      refType:
        type: choice
        description: "Find branch name or commit SHA?"
        options:
          - Branch name
          - Commit SHA
        default: Branch name
      gitRef:
        description: "Input branch name or commit SHA"
        required: true
        type: string
        default: main

permissions:
  id-token: write
  contents: read

jobs:

  deploy_artifacts:
    name: "Deploy Image & Template to Dev"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # pin@v3
        with:
          ref: ${{ inputs.gitRef }}

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@342dcc4899c07fedf41f91cbb1e6c68925a85d37 # pin@v2
        with:
          version: 1.90.0
          use-installer: true

      - name: Fetch Commit SHA
        id: gitRefSHA
        if: ${{ github.event.inputs.choice }} == "Commit SHA"
        run: echo GIT_REF_SHA=${{ inputs.gitRef }} >> $GITHUB_ENV

      - name: Fetch Commit SHA by Branch name
        id: gitRefBranch
        if: ${{ github.event.inputs.choice }} == "Branch name"
        run: echo GIT_REF_SHA=$(git log -1 ${{ inputs.gitRef }} --pretty=format:%H) >> $GITHUB_ENV

      - name: Set tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # pin@v1-node16
        with:
          role-to-assume: ${{ secrets.DEV_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # pin@v1

      - name: Build & Publish Docker Image as latest
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.DEV_ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_REF_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_REF_SHA

      - name: Upload SAM Template to Bucket
        id: publish-template
        env:
          ARTIFACT_BUCKET_NAME: ${{ secrets.DEV_ARTIFACT_SOURCE_BUCKET_NAME }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.DEV_ECR_REPOSITORY }}
        run: |
          echo "Running sam build on template file"
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          cd ${GITHUB_WORKSPACE}/deploy || exit 1
          sam validate
          sam build
          mv .aws-sam/build/template.yaml cf-template.yaml
          echo "Replacing 'CONTAINER-IMAGE-PLACEHOLDER' with new ECR image ref"
          sed -i "s|CONTAINER-IMAGE-PLACEHOLDER|$ECR_REGISTRY/$ECR_REPOSITORY:$GIT_REF_SHA|" cf-template.yaml
          zip template.zip cf-template.yaml
          aws s3 cp template.zip "s3://$ARTIFACT_BUCKET_NAME/template.zip" --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GIT_REF_SHA"

      - name: "Delegated Deployment via AWS CodeDeploy"
        run: echo "Deployment has been delegated to AWS CodeDeploy"