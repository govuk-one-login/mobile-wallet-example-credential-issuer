name: DSC Issuer - Push to Main

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - document-signing-certificate-issuer/**
      - .github/workflows/document-signing-certificate-issuer-push-to-main.yml

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./document-signing-certificate-issuer
    steps:
      - name: Check out repository code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Check out the repository at the specific branch, tag, or commit
          ref: ${{ inputs.gitRef }}

      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version-file: document-signing-certificate-issuer/.nvmrc

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: ${{ secrets.BUILD_DSC_ISS_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@c71dd89d980e49367c70391e8ada4353f52f2800 # v2
        with:
          version: 1.131.0
          use-installer: true

      - name: Run SAM validate
        run: |
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          sam validate

      - name: Run SAM build
        run: sam build

      - name: Deploy SAM app
        # Upload the built SAM application artifacts to the deployment pipeline S3 bucket
        uses: govuk-one-login/devplatform-upload-action@fda75612a1b0e5a8c84ae7c44a23340e50e5bbde # v3.11.0
        with:
          artifact-bucket-name: ${{ secrets.BUILD_DSC_ISS_ARTIFACT_SOURCE_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          working-directory: ./document-signing-certificate-issuer
          template-file: .aws-sam/build/template.yaml

  create-release:
    name: Create release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    needs: [ deploy ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: echo "version=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"

      - name: Create semantic release
        uses: cocogitto/cocogitto-action@c7a74f5406bab86da17da0f0e460a69f8219a68c # v3.11
        id: release
        with:
          release: true
          git-user: 'github-actions[bot]'
          git-user-email: 'github-actions[bot]@users.noreply.github.com'
          check-latest-tag-only: true

      - name: Check if version was bumped
        id: created
        run: |
          prev=${{ steps.get_tag.outputs.version }}
          new=${{ steps.release.outputs.version }}

          if [ "$prev" = "$new" ]; then
            echo "bump=false" >> "$GITHUB_OUTPUT"
          else
            echo "bump=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Push semantic version tag
        if: steps.created.outputs.bump == 'true'
        run: git push --follow-tags && git push --tags
        shell: bash

      - name: Create GitHub release
        if: steps.created.outputs.bump == 'true'
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          tag_name: ${{ steps.release.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Log release info
        if: steps.created.outputs.bump == 'true'
        run: |
          echo "New release created: ${{ steps.release.outputs.version }}"
