plugins {
	id "application"
	id "java"
	id "com.diffplug.spotless" version "6.25.0"
	id "org.sonarqube" version "5.0.0.4638"
	id "jacoco-report-aggregation"
}

defaultTasks "clean", "spotlessApply", "build"

repositories {
	maven {
		url "https://gds.jfrog.io/artifactory/di-allowed-repos"
	}
}

dependencies {
	implementation "com.google.guava:guava:33.0.0-jre"
	implementation group: "io.dropwizard", name: "dropwizard-core", version: "4.0.6"
	implementation group: 'io.dropwizard', name: 'dropwizard-client', version: '4.0.7'
	implementation 'org.bouncycastle:bcpkix-jdk18on:1.78.1'
	implementation "com.nimbusds:oauth2-oidc-sdk:11.9.1"
	implementation "software.amazon.awssdk:kms:2.24.13"
	implementation "software.amazon.awssdk:dynamodb:2.24.13"
	implementation "software.amazon.awssdk:dynamodb-enhanced:2.24.13"
	implementation "software.amazon.awssdk:url-connection-client:2.25.1"
	implementation 'software.amazon.awssdk:core:2.25.36'
	implementation 'software.amazon.awssdk:arns:2.25.36'
	implementation "com.fasterxml.jackson.core:jackson-databind:2.16.1"
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.2.1'
	implementation 'org.jetbrains:annotations:24.1.0'

	testImplementation "org.junit.jupiter:junit-jupiter-api:5.9.0"
	testImplementation "org.mockito:mockito-junit-jupiter:5.4.0"
	testImplementation "uk.org.webcompere:system-stubs-jupiter:2.1.6"
	testImplementation "org.hamcrest:hamcrest:2.2"
	testImplementation group: 'io.dropwizard', name: 'dropwizard-testing', version: '4.0.7'
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.9.0"
}

application {
	mainClass = "uk.gov.di.mobile.wallet.cri.ExampleCriApp"
}

jar {
	manifest {
		attributes(
				"Main-Class": "uk.gov.di.mobile.wallet.cri.ExampleCriApp")
	}

	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

run {
	args = ["server", "config.yml"]
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

String jacocoBuildReportPath = "reports/jacoco/test/jacocoTestReport.xml"

sonar {
	properties {
		property "sonar.projectKey", "govuk-one-login_mobile-wallet-example-credential-issuer"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.exclusions", "**/src/test/**"
		property "sonar.coverage.jacoco.xmlReportPaths", "$project.buildDir/$jacocoBuildReportPath"
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.18.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
		removeUnusedImports()
	}
	groovyGradle {
		target "**/*.gradle"
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
	exclude 'uk/gov/di/mobile/wallet/cri/ExampleCriApp'
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}

tasks.withType(Test) {
	testLogging {
		exceptionFormat "full"
		events "started", "skipped", "passed", "failed"
		showStandardStreams true
	}
}
