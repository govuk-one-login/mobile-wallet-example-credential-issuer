AWSTemplateFormatVersion: "2010-09-09"

Description: |-
  Wallet Stub BE
  Document Signing Certificate Issuer

Parameters:
  CodeSigningConfigArn:
    Description: |
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Type: String
    Default: none

  ContainerPort:
    Description: |
      The port on which the container is running
    Type: Number
    Default: 8080

  DocumentBuilderStackName:
    Description: The cloudformation stack name of the document builder
    Type: String
    Default: wallet-doc-builder-fe

  Environment:
    Description: The environment type
    Type: String
    AllowedValues:
      - dev
      - build
      - staging
    Default: dev

  PermissionsBoundary:
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Type: String
    Default: none

  VpcStackName:
    Description: |
      The name of the stack that defines the VPC in which this container will run.
    Type: String
    Default: platform-vpc

Mappings:
  ElasticLoadBalancerAccountIds:
    eu-west-2:
      AccountId: 652711504416

  EnvironmentVariables:
    build:
      AuthServerUrl: stub-credential-issuer.mobile.build.account.gov.uk
      BackImageRepository: arn:aws:ecr:eu-west-2:497065468681:repository/wallet-cred-issuer-be-ecr-containerrepository-ikbt4gtnl9ew
      CertificateRetentionPeriodInDays: 488
      CertificateValidityPeriodInDays: 458
      CloudwatchLogRetentionDays: 3650
      CredentialStoreUrl: stub-credential-issuer.mobile.build.account.gov.uk
      DocumentSigningKeyCommonName: Example Issuer DSC (BUILD)
      DocumentSigningKeyCountryName: UK
      DocumentSigningKeyParameterPrefix: /iaca/
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      LambdaLogLevel: INFO
      PlatformCaArnParameter: /platform-ca/iaca/certificate-authority-arn
      PlatformCaIssuerAlternativeName: /platform-ca/iaca/issuer-alternative-name
      SelfUrl: example-credential-issuer.mobile.build.account.gov.uk
      WalletAppDeepLinkUrl: mobile.build.account.gov.uk/wallet
    dev:
      AuthServerUrl: stub-credential-issuer.mobile.dev.account.gov.uk
      BackImageRepository: arn:aws:ecr:eu-west-2:671524980203:repository/wallet-cred-issuer-be-ecr-containerrepository-ta87rf6hloli
      CertificateRetentionPeriodInDays: 488
      CertificateValidityPeriodInDays: 458
      CloudwatchLogRetentionDays: 3
      CredentialStoreUrl: stub-credential-issuer.mobile.dev.account.gov.uk
      DocumentSigningKeyCommonName: Example Issuer DSC (DEV)
      DocumentSigningKeyCountryName: UK
      DocumentSigningKeyParameterPrefix: /iaca/
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      LambdaLogLevel: DEBUG
      PlatformCaArnParameter: /platform-ca/iaca/certificate-authority-arn
      PlatformCaIssuerAlternativeName: /platform-ca/iaca/issuer-alternative-name
      SelfUrl: example-credential-issuer.mobile.dev.account.gov.uk
      WalletAppDeepLinkUrl: mobile.dev.account.gov.uk/wallet
    staging:
      AuthServerUrl: token.staging.account.gov.uk
      BackImageRepository: arn:aws:ecr:eu-west-2:497065468681:repository/wallet-cred-issuer-be-ecr-containerrepository-ikbt4gtnl9ew
      CertificateRetentionPeriodInDays: 488
      CertificateValidityPeriodInDays: 458
      CloudwatchLogRetentionDays: 3650
      CredentialStoreUrl: stub-credential-issuer.mobile.staging.account.gov.uk
      DocumentSigningKeyCommonName: Example Issuer DSC (BUILD)
      DocumentSigningKeyCountryName: UK
      DocumentSigningKeyParameterPrefix: /iaca/
      DynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      LambdaLogLevel: INFO
      PlatformCaArnParameter: /platform-ca/iaca/certificate-authority-arn
      PlatformCaIssuerAlternativeName: /platform-ca/iaca/issuer-alternative-name
      SelfUrl: example-credential-issuer.mobile.staging.account.gov.uk
      WalletAppDeepLinkUrl: mobile.staging.account.gov.uk/wallet

Conditions:
  IsBuildOrStaging: !Or
    - !Equals
      - !Ref Environment
      - build
    - !Equals
      - !Ref Environment
      - staging

  StackNameIsWalletCredIssuerBE: !Equals
    - !Ref AWS::StackName
    - wallet-cred-issuer-be

  UseCodeSigning: !Not
    - !Equals
      - !Ref CodeSigningConfigArn
      - none

  UsePermissionsBoundary: !Not
    - !Equals
      - !Ref PermissionsBoundary
      - none

Transform:
  - AWS::Serverless-2016-10-31

Globals:
  Function:
    Architectures:
      - arm64
    AutoPublishAlias: live
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Environment:
      Variables:
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}'
          - SecretArn: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - DynatraceSecretArn
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - DynatraceSecretArn
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}'
          - SecretArn: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - DynatraceSecretArn
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - DynatraceSecretArn
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}'
          - SecretArn: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - DynatraceSecretArn
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}'
        - SecretArn: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - DynatraceSecretArn
    LoggingConfig:
      ApplicationLogLevel: !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - LambdaLogLevel
      LogFormat: JSON
      SystemLogLevel: !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - LambdaLogLevel
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    Runtime: nodejs20.x

Resources:
  CRICacheDatabase:
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: credentialIdentifier
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: credentialIdentifier
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        KMSMasterKeyId: !GetAtt CRICacheDatabaseKmsKey.Arn
        SSEEnabled: true
        SSEType: KMS
      TableName: !Sub ${AWS::StackName}-credential_offer_cache
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Mobile Wallet
        - Key: Owner
          Value: Mobile Wallet Team
        - Key: Environment
          Value: !Ref Environment
      TimeToLiveSpecification:
        AttributeName: timeToLive
        Enabled: true

  CRICacheDatabaseKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
        Version: "2012-10-17"

  CRICacheDatabaseKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/${Environment}/CRICacheDatabaseKmsKey
      TargetKeyId: !Ref CRICacheDatabaseKmsKey

  CredentialIssuerSigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Asymmetric key for signing tokens
      EnableKeyRotation: false
      Enabled: true
      KeyPolicy:
        Statement:
          - Action:
              - kms:*
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Resource:
              - '*'
          - Action:
              - kms:Sign
              - kms:GetPublicKey
              - kms:DescribeKey
            Effect: Allow
            Principal:
              AWS: !GetAtt WalletBEECSTaskRole.Arn
            Resource:
              - '*'
        Version: "2012-10-17"
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      MultiRegion: false

  CredentialIssuerSigningKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/credential-signing-key-${AWS::StackName}
      TargetKeyId: !Ref CredentialIssuerSigningKey

  DocSigningCertificateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-certificates
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - CertificateRetentionPeriodInDays
            Id: RemoveExpiredCertificates
            NoncurrentVersionExpiration:
              NoncurrentDays: 14
            Prefix: results/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  DocumentSigningKey1:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub Example Document Signing Key 1 for ${AWS::StackName}
      Enabled: true
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      PendingWindowInDays: 7

  DocumentSigningKeyAlias1:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-doc-signing-key-1
      TargetKeyId: !Ref DocumentSigningKey1

  ExampleCredIssuerLowContainerTaskCountAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: false
      AlarmDescription: Trigger a warning if the running container task count drops below 1
      AlarmName: !Sub ${AWS::StackName}-EgCredIssuerLowContainerTaskCountAlarm
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Id: containerTaskCount
          MetricStat:
            Metric:
              Dimensions:
                - Name: ClusterName
                  Value: !Ref WalletBECluster
                - Name: ServiceName
                  Value: !GetAtt WalletBEECSService.Name
              MetricName: RunningTaskCount
              Namespace: ECS/ContainerInsights
            Period: 60
            Stat: Minimum
          ReturnData: true
      Threshold: 1
      TreatMissingData: breaching
    Condition: IsBuildOrStaging

  FE4XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: false
      AlarmDescription: Trigger the alarm if errorThreshold exceeds 50% with a minimum of 5 invocations in the last 30 minutes
      AlarmName: !Sub ${AWS::StackName}-FE4XXErrorAlarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      Metrics:
        - Expression: IF(invocations<5,0,errorPercentage)
          Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
        - Id: invocations
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiId
                  Value: !Ref WalletBEApiGwHttpEndpoint
              MetricName: Count
              Namespace: AWS/ApiGateway
            Period: 1800
            Stat: Sum
          ReturnData: false
        - Id: error
          MetricStat:
            Metric:
              Dimensions:
                - Name: ApiId
                  Value: !Ref WalletBEApiGwHttpEndpoint
              MetricName: 4xx
              Namespace: AWS/ApiGateway
            Period: 1800
            Stat: Sum
          ReturnData: false
        - Expression: (error/invocations) * 100
          Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
      Threshold: 50
      TreatMissingData: notBreaching
    Condition: IsBuildOrStaging

  IssueDocSigningCertificateFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - issueDocumentSigningCertificate.ts
        Minify: true
        Target: es2020
    Properties:
      CodeUri: ../doc-signing-cert/issue-document-signing-certificate/
      Environment:
        Variables:
          DOC_SIGNING_KEY_BUCKET: !Ref DocSigningCertificateBucket
          DOC_SIGNING_KEY_COMMON_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - DocumentSigningKeyCommonName
          DOC_SIGNING_KEY_COUNTRY_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - DocumentSigningKeyCountryName
          DOC_SIGNING_KEY_ID: !Ref DocumentSigningKey1
          DOC_SIGNING_KEY_VALIDITY_PERIOD: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - CertificateValidityPeriodInDays
          PLATFORM_CA_ARN_PARAMETER: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - PlatformCaArnParameter
          PLATFORM_CA_ISSUER_ALTERNATIVE_NAME: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - PlatformCaIssuerAlternativeName
          POWERTOOLS_SERVICE_NAME: issueDocSigningCertificateFunction
      FunctionName: !Sub ${AWS::StackName}-issue-doc-signing-certificate
      Handler: issueDocumentSigningCertificate.handler
      LoggingConfig:
        LogGroup: !Ref IssueDocSigningCertificateFunctionLogGroup
      MemorySize: 512
      Policies:
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - PlatformCaArnParameter
        - SSMParameterWithSlashPrefixReadPolicy:
            ParameterName: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - PlatformCaIssuerAlternativeName
        - S3CrudPolicy:
            BucketName: !Ref DocSigningCertificateBucket
        - Statement:
            - Action:
                - kms:GetPublicKey
                - kms:Sign
              Effect: Allow
              Resource: !GetAtt DocumentSigningKey1.Arn
              Sid: KMSAccessDocumentSigningKeyPolicy
        - Statement:
            - Action:
                - acm-pca:IssueCertificate
                - acm-pca:GetCertificate
              Effect: Allow
              Resource: !Sub
                - '{{resolve:ssm:${ParameterName}}}'
                - ParameterName: !FindInMap
                    - EnvironmentVariables
                    - !Ref Environment
                    - PlatformCaArnParameter
              Sid: ACMPCAIssueCertificatePolicy
      ReservedConcurrentExecutions: 1
      Timeout: 15
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-AWSServicesEndpointSecurityGroupId
        SubnetIds:
          - !ImportValue
            Fn::Sub: ${VpcStackName}-PrivateSubnetIdA
          - !ImportValue
            Fn::Sub: ${VpcStackName}-PrivateSubnetIdB
          - !ImportValue
            Fn::Sub: ${VpcStackName}-PrivateSubnetIdC

  IssueDocSigningCertificateFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}-issue-doc-signing-certificate
      RetentionInDays: !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - CloudwatchLogRetentionDays

  WalletBEAPIGWAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-WalletBE-API-GW-AccessLogs
      RetentionInDays: 14

  WalletBEAPIGWRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WalletBEApiGwHttpEndpoint
      RouteKey: ANY /{proxy+}
      Target: !Join
        - /
        - - integrations
          - !Ref WalletBEApiGwHttpEndpointIntegration

  WalletBEAPIStageDefault:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      AccessLogSettings:
        DestinationArn: !GetAtt WalletBEAPIGWAccessLogsGroup.Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod", "path": "$context.path", "routeKey":"$context.routeKey", "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength" }'
      ApiId: !Ref WalletBEApiGwHttpEndpoint
      AutoDeploy: true
      DefaultRouteSettings:
        DataTraceEnabled: false
        DetailedMetricsEnabled: true
        ThrottlingBurstLimit: 400
        ThrottlingRateLimit: 1200
      StageName: $default

  WalletBEAccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub wallet-stub-back-${AWS::StackName}-${Environment}-access-logs
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  WalletBEAccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WalletBEAccessLogsBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
            Effect: Allow
            Principal:
              AWS: !Sub
                - arn:aws:iam::${ElbAccountId}:root
                - ElbAccountId: !FindInMap
                    - ElasticLoadBalancerAccountIds
                    - !Ref AWS::Region
                    - AccountId
            Resource:
              - !Sub arn:aws:s3:::${WalletBEAccessLogsBucket}/wallet-stub-back-${Environment}/AWSLogs/${AWS::AccountId}/*
          - Action: '*'
            Condition:
              Bool:
                aws:SecureTransport: false
            Effect: Deny
            Principal:
              AWS: '*'
            Resource: !Sub
              - arn:aws:s3:::${bucketName}/*
              - bucketName: !Ref WalletBEAccessLogsBucket
        Version: "2012-10-17"

  WalletBEApiGwHttpEndpoint:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: !Sub Wallet Stub Backend API. ${AWS::StackName}
      Name: !Sub wallet-stub-Back-${Environment}-${AWS::StackName}
      ProtocolType: HTTP

  WalletBEApiGwHttpEndpointIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WalletBEApiGwHttpEndpoint
      ConnectionId: !ImportValue
        Fn::Sub: ${VpcStackName}-VpcLinkId
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationType: HTTP_PROXY
      IntegrationUri: !Ref WalletBELoadBalancerListener
      PayloadFormatVersion: "1.0"
      RequestParameters:
        overwrite:header.x-govuk-signin-source-ip: $context.identity.sourceIp

  WalletBEApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      ApiId: !Ref WalletBEApiGwHttpEndpoint
      DomainName: !Ref WalletBECustomDomain
      Stage: !Ref WalletBEAPIStageDefault

  WalletBEApiRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        DNSName: !GetAtt WalletBECustomDomain.RegionalDomainName
        EvaluateTargetHealth: false
        HostedZoneId: !GetAtt WalletBECustomDomain.RegionalHostedZoneId
      HostedZoneId: !Sub '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      Name: !Ref WalletBECustomDomain
      Type: A

  WalletBECluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-WalletECSCluster
        - Key: Product
          Value: GOV.UK sign in
        - Key: System
          Value: Wallet Stub BE
        - Key: Environment
          Value: !Sub ${Environment}

  WalletBECustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !If
        - StackNameIsWalletCredIssuerBE
        - !FindInMap
          - EnvironmentVariables
          - !Ref Environment
          - SelfUrl
        - !Sub
          - ${AWS::StackName}-${SelfUrl}
          - SelfUrl: !FindInMap
              - EnvironmentVariables
              - !Ref Environment
              - SelfUrl
      DomainNameConfigurations:
        - CertificateArn: !Sub '{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}'
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  WalletBEECSAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/${AWS::StackName}-Wallet-Stub-Back-ECS
      RetentionInDays: 14

  WalletBEECSAccessLogsGroupSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
      FilterPattern: ""
      LogGroupName: !Ref WalletBEECSAccessLogsGroup
    Condition: IsBuildOrStaging

  WalletBEECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wallet Stub BE ECS Security Group permitting outbound to anywhere.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: !ImportValue
        Fn::Sub: ${VpcStackName}-VpcId

  WalletBEECSSecurityGroupIngressFromLoadBalancer:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Wallet Stub BE ECS permits inbound from the Wallet Stub BE load balancer.
      FromPort: !Ref ContainerPort
      GroupId: !GetAtt WalletBEECSSecurityGroup.GroupId
      IpProtocol: tcp
      SourceSecurityGroupId: !GetAtt WalletBELoadBalancerSG.GroupId
      ToPort: !Ref ContainerPort

  WalletBEECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - WalletBELoadBalancerListener
    Properties:
      Cluster: !Ref WalletBECluster
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: app
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref WalletBELoadBalancerListenerTargetGroupECS
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !GetAtt WalletBEECSSecurityGroup.GroupId
          Subnets:
            - !ImportValue
              Fn::Sub: ${VpcStackName}-ProtectedSubnetIdA
            - !ImportValue
              Fn::Sub: ${VpcStackName}-ProtectedSubnetIdB
            - !ImportValue
              Fn::Sub: ${VpcStackName}-ProtectedSubnetIdC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-WalletECS
        - Key: Product
          Value: GOV.UK sign in
        - Key: System
          Value: Wallet BE Stub
        - Key: Environment
          Value: !Sub ${Environment}
      TaskDefinition: !Ref WalletBEECSServiceTaskDefinition

  WalletBEECSServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: SIGNING_KEY_ALIAS
              Value: !Ref CredentialIssuerSigningKeyAlias
            - Name: AWS_REGION
              Value: !Sub ${AWS::Region}
            - Name: ENVIRONMENT
              Value: !Sub ${Environment}
            - Name: SELF_URL
              Value: !If
                - StackNameIsWalletCredIssuerBE
                - !Sub
                  - https://${SelfUrl}
                  - SelfUrl: !FindInMap
                      - EnvironmentVariables
                      - !Ref Environment
                      - SelfUrl
                - !Sub
                  - https://${AWS::StackName}-${SelfUrl}
                  - SelfUrl: !FindInMap
                      - EnvironmentVariables
                      - !Ref Environment
                      - SelfUrl
            - Name: DID_CONTROLLER
              Value: !If
                - StackNameIsWalletCredIssuerBE
                - !FindInMap
                  - EnvironmentVariables
                  - !Ref Environment
                  - SelfUrl
                - !Sub
                  - ${AWS::StackName}-${SelfUrl}
                  - SelfUrl: !FindInMap
                      - EnvironmentVariables
                      - !Ref Environment
                      - SelfUrl
            - Name: OIDC_CLIENT_ID
              Value: !Sub '{{resolve:ssm:/${DocumentBuilderStackName}/Config/OIDC/Client/Id}}'
            - Name: CREDENTIAL_STORE_URL
              Value: !Sub
                - https://${CredentialStoreUrl}
                - CredentialStoreUrl: !FindInMap
                    - EnvironmentVariables
                    - !Ref Environment
                    - CredentialStoreUrl
            - Name: WALLET_APP_DEEP_LINK_URL
              Value: !Sub
                - https://${WalletAppDeepLinkUrl}
                - WalletAppDeepLinkUrl: !FindInMap
                    - EnvironmentVariables
                    - !Ref Environment
                    - WalletAppDeepLinkUrl
            - Name: CREDENTIAL_OFFER_CACHE
              Value: !Ref CRICacheDatabase
            - Name: ONE_LOGIN_AUTH_SERVER_URL
              Value: !Sub
                - https://${AuthServerUrl}
                - AuthServerUrl: !FindInMap
                    - EnvironmentVariables
                    - !Ref Environment
                    - AuthServerUrl
          Essential: true
          Image: CONTAINER-IMAGE-PLACEHOLDER
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref WalletBEECSAccessLogsGroup
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: !Sub wallet-stub-back-${Environment}
          Name: app
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
      Cpu: "1024"
      ExecutionRoleArn: !GetAtt WalletBEECSTaskExecutionRole.Arn
      Memory: "2048"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-WalletTaskDefinition
        - Key: Product
          Value: GOV.UK sign in
        - Key: System
          Value: Wallet Stub BE
        - Key: Environment
          Value: !Sub ${Environment}
      TaskRoleArn: !GetAtt WalletBEECSTaskRole.Arn

  WalletBEECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchCheckLayerAvailability
                Effect: Allow
                Resource:
                  - !FindInMap
                    - EnvironmentVariables
                    - !Ref Environment
                    - BackImageRepository
              - Action:
                  - ecr:GetAuthorizationToken
                Effect: Allow
                Resource:
                  - '*'
              - Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !GetAtt WalletBEECSAccessLogsGroup.Arn
                  - !Sub ${WalletBEECSAccessLogsGroup.Arn}:*
            Version: "2012-10-17"
          PolicyName: PullWalletBackImage

  WalletBEECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                Effect: Allow
                Resource: !GetAtt CRICacheDatabase.Arn
              - Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: !GetAtt CRICacheDatabaseKmsKey.Arn
            Version: "2012-10-17"
          PolicyName: AccessDynamoDb

  WalletBELoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref WalletBEAccessLogsBucket
        - Key: access_logs.s3.prefix
          Value: !Sub wallet-stub-back-${Environment}
        - Key: idle_timeout.timeout_seconds
          Value: 60
      Scheme: internal
      SecurityGroups:
        - !GetAtt WalletBELoadBalancerSG.GroupId
      Subnets:
        - !ImportValue
          Fn::Sub: ${VpcStackName}-PrivateSubnetIdA
        - !ImportValue
          Fn::Sub: ${VpcStackName}-PrivateSubnetIdB
        - !ImportValue
          Fn::Sub: ${VpcStackName}-PrivateSubnetIdC
      Type: application

  WalletBELoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref WalletBELoadBalancerListenerTargetGroupECS
          Type: forward
      LoadBalancerArn: !Ref WalletBELoadBalancer
      Port: 80
      Protocol: HTTP

  WalletBELoadBalancerListenerTargetGroupECS:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /healthcheck
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200-499
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60
      TargetType: ip
      VpcId: !ImportValue
        Fn::Sub: ${VpcStackName}-VpcId

  WalletBELoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wallet Stub BE LoadBalancer Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId: !ImportValue
        Fn::Sub: ${VpcStackName}-VpcId

  WalletBELoadBalancerSGEgressToECSSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Egress between the Wallet Stub BE load balancer and the Wallet Stub BE ECS security group
      DestinationSecurityGroupId: !GetAtt WalletBEECSSecurityGroup.GroupId
      FromPort: !Ref ContainerPort
      GroupId: !GetAtt WalletBELoadBalancerSG.GroupId
      IpProtocol: tcp
      ToPort: !Ref ContainerPort

Outputs:
  CredIssuerFriendlyUrl:
    Description: Friendly URL for the deployed credential issuer service
    Value: !If
      - StackNameIsWalletCredIssuerBE
      - !FindInMap
        - EnvironmentVariables
        - !Ref Environment
        - SelfUrl
      - !Sub
        - ${AWS::StackName}-${SelfUrl}
        - SelfUrl: !FindInMap
            - EnvironmentVariables
            - !Ref Environment
            - SelfUrl
